#The simulation print for the "test_load_store.h" run
000: 00100293      li x5, 1
     x5  =                1 (       1)
004: 00200313      li x6, 2
     x6  =                2 (       2)
008: ffd00393      li x7, -3
     x7  =               -3 (fffffffd)
012: ffc00e13      li x28, -4
     x28 =               -4 (fffffffc)
016: 00000513      li x10, 0
     x10 =                0 (       0)
020: 00552023      sw x5, 0(x10)
     m[       0] =                1 (       1)
024: 00450513      addi x10, x10, 4
     x10 =                4 (       4)
028: 00651023      sh x6, 0(x10)
     m[       4] =                2 (       2)
032: 00551123      sh x5, 2(x10)
     m[       6] =                1 (       1)
036: 00450513      addi x10, x10, 4
     x10 =                8 (       8)
040: 01c50023      sb x28, 0(x10)
     m[       8] =               -4 (fffffffc)
044: 007500a3      sb x7, 1(x10)
     m[       9] =               -3 (fffffffd)
048: 00650123      sb x6, 2(x10)
     m[       a] =                2 (       2)
052: 005501a3      sb x5, 3(x10)
     m[       b] =                1 (       1)
056: 00050583      lb x11, 0(x10)
     x11 =               -4 (fffffffc)    (m[       8])
060: 00150603      lb x12, 1(x10)
     x12 =               -3 (fffffffd)    (m[       9])
064: 00250683      lb x13, 2(x10)
     x13 =                2 (       2)    (m[       a])
068: 00350703      lb x14, 3(x10)
     x14 =                1 (       1)    (m[       b])
072: 00054783      lbu x15, 0(x10)
     x15 =              252 (      fc)    (m[       8])
076: 00154803      lbu x16, 1(x10)
     x16 =              253 (      fd)    (m[       9])
080: 00254883      lbu x17, 2(x10)
     x17 =                2 (       2)    (m[       a])
084: ffc50513      addi x10, x10, -4
     x10 =                4 (       4)
088: 00251403      lh x8, 2(x10)
     x8  =                1 (       1)    (m[       6])
092: 00051483      lh x9, 0(x10)
     x9  =                2 (       2)    (m[       4])
096: 00455903      lhu x18, 4(x10)
     x18 =            65020 (    fdfc)    (m[       8])
100: 00655983      lhu x19, 6(x10)
     x19 =              258 (     102)    (m[       a])
104: ffc50513      addi x10, x10, -4
     x10 =                0 (       0)
108: 00852a03      lw x20, 8(x10)
     x20 =         16973308 ( 102fdfc)    (m[       8])
112: 00008067      ret
     pc  =                0 (       0)
x1  =                0 (       0)
x2  =                0 (       0)
x3  =                0 (       0)
x4  =                0 (       0)
x5  =                1 (       1)
x6  =                2 (       2)
x7  =               -3 (fffffffd)
x8  =                1 (       1)
x9  =                2 (       2)
x10 =                0 (       0)
x11 =               -4 (fffffffc)
x12 =               -3 (fffffffd)
x13 =                2 (       2)
x14 =                1 (       1)
x15 =              252 (      fc)
x16 =              253 (      fd)
x17 =                2 (       2)
x18 =            65020 (    fdfc)
x19 =              258 (     102)
x20 =         16973308 ( 102fdfc)
x21 =                0 (       0)
x22 =                0 (       0)
x23 =                0 (       0)
x24 =                0 (       0)
x25 =                0 (       0)
x26 =                0 (       0)
x27 =                0 (       0)
x28 =               -4 (fffffffc)
x29 =                0 (       0)
x30 =                0 (       0)
x31 =                0 (       0)
29 fetched and decoded instructions
last pc 112
m[   0] =                1 (       1)
m[   1] =            65538 (   10002)
m[   2] =         16973308 ( 102fdfc)

#The simulation print for the "test_mem.h" run
000: 00000513      li x10, 0
     x10 =                0 (       0)
004: 00000593      li x11, 0
     x11 =                0 (       0)
008: 00000613      li x12, 0
     x12 =                0 (       0)
012: 02860693      addi x13, x12, 40
     x13 =               40 (      28)
016: 00158593      addi x11, x11, 1
     x11 =                1 (       1)
020: 00b62023      sw x11, 0(x12)
     m[       0] =                1 (       1)
024: 00460613      addi x12, x12, 4
     x12 =                4 (       4)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                2 (       2)
020: 00b62023      sw x11, 0(x12)
     m[       4] =                2 (       2)
024: 00460613      addi x12, x12, 4
     x12 =                8 (       8)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                3 (       3)
020: 00b62023      sw x11, 0(x12)
     m[       8] =                3 (       3)
024: 00460613      addi x12, x12, 4
     x12 =               12 (       c)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                4 (       4)
020: 00b62023      sw x11, 0(x12)
     m[       c] =                4 (       4)
024: 00460613      addi x12, x12, 4
     x12 =               16 (      10)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                5 (       5)
020: 00b62023      sw x11, 0(x12)
     m[      10] =                5 (       5)
024: 00460613      addi x12, x12, 4
     x12 =               20 (      14)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                6 (       6)
020: 00b62023      sw x11, 0(x12)
     m[      14] =                6 (       6)
024: 00460613      addi x12, x12, 4
     x12 =               24 (      18)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                7 (       7)
020: 00b62023      sw x11, 0(x12)
     m[      18] =                7 (       7)
024: 00460613      addi x12, x12, 4
     x12 =               28 (      1c)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                8 (       8)
020: 00b62023      sw x11, 0(x12)
     m[      1c] =                8 (       8)
024: 00460613      addi x12, x12, 4
     x12 =               32 (      20)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                9 (       9)
020: 00b62023      sw x11, 0(x12)
     m[      20] =                9 (       9)
024: 00460613      addi x12, x12, 4
     x12 =               36 (      24)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =               10 (       a)
020: 00b62023      sw x11, 0(x12)
     m[      24] =               10 (       a)
024: 00460613      addi x12, x12, 4
     x12 =               40 (      28)
028: fed61ae3      bne x12, x13, 16
     pc  =               32 (      20)
032: 00000593      li x11, 0
     x11 =                0 (       0)
036: 00000613      li x12, 0
     x12 =                0 (       0)
040: 00062703      lw x14, 0(x12)
     x14 =                1 (       1)    (m[       0])
044: 00e50533      add x10, x10, x14
     x10 =                1 (       1)
048: 00460613      addi x12, x12, 4
     x12 =                4 (       4)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                2 (       2)    (m[       4])
044: 00e50533      add x10, x10, x14
     x10 =                3 (       3)
048: 00460613      addi x12, x12, 4
     x12 =                8 (       8)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                3 (       3)    (m[       8])
044: 00e50533      add x10, x10, x14
     x10 =                6 (       6)
048: 00460613      addi x12, x12, 4
     x12 =               12 (       c)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                4 (       4)    (m[       c])
044: 00e50533      add x10, x10, x14
     x10 =               10 (       a)
048: 00460613      addi x12, x12, 4
     x12 =               16 (      10)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                5 (       5)    (m[      10])
044: 00e50533      add x10, x10, x14
     x10 =               15 (       f)
048: 00460613      addi x12, x12, 4
     x12 =               20 (      14)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                6 (       6)    (m[      14])
044: 00e50533      add x10, x10, x14
     x10 =               21 (      15)
048: 00460613      addi x12, x12, 4
     x12 =               24 (      18)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                7 (       7)    (m[      18])
044: 00e50533      add x10, x10, x14
     x10 =               28 (      1c)
048: 00460613      addi x12, x12, 4
     x12 =               28 (      1c)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                8 (       8)    (m[      1c])
044: 00e50533      add x10, x10, x14
     x10 =               36 (      24)
048: 00460613      addi x12, x12, 4
     x12 =               32 (      20)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                9 (       9)    (m[      20])
044: 00e50533      add x10, x10, x14
     x10 =               45 (      2d)
048: 00460613      addi x12, x12, 4
     x12 =               36 (      24)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =               10 (       a)    (m[      24])
044: 00e50533      add x10, x10, x14
     x10 =               55 (      37)
048: 00460613      addi x12, x12, 4
     x12 =               40 (      28)
052: fed61ae3      bne x12, x13, 40
     pc  =               56 (      38)
056: 00008067      ret
     pc  =                0 (       0)
x1  =                0 (       0)
x2  =                0 (       0)
x3  =                0 (       0)
x4  =                0 (       0)
x5  =                0 (       0)
x6  =                0 (       0)
x7  =                0 (       0)
x8  =                0 (       0)
x9  =                0 (       0)
x10 =               55 (      37)
x11 =                0 (       0)
x12 =               40 (      28)
x13 =               40 (      28)
x14 =               10 (       a)
x15 =                0 (       0)
x16 =                0 (       0)
x17 =                0 (       0)
x18 =                0 (       0)
x19 =                0 (       0)
x20 =                0 (       0)
x21 =                0 (       0)
x22 =                0 (       0)
x23 =                0 (       0)
x24 =                0 (       0)
x25 =                0 (       0)
x26 =                0 (       0)
x27 =                0 (       0)
x28 =                0 (       0)
x29 =                0 (       0)
x30 =                0 (       0)
x31 =                0 (       0)
87 fetched and decoded instructions
last pc 56
m[   0] =                1 (       1)
m[   1] =                2 (       2)
m[   2] =                3 (       3)
m[   3] =                4 (       4)
m[   4] =                5 (       5)
m[   5] =                6 (       6)
m[   6] =                7 (       7)
m[   7] =                8 (       8)
m[   8] =                9 (       9)
m[   9] =               10 (       a)
